export default class t extends HTMLElement{connectedCallback(){this.svg(this.attachShadow({mode:`open`}))}svg(t,e=(this.getAttribute`stroke`||`#e33,#3e3,#35e,#ee3,#e5e,#3ee`).split`,`,i=~~this.getAttribute`pull`,s=~~this.getAttribute`gap`,r=0,l=0){setTimeout((u=>{t.innerHTML=`<style>:host{display:inline-block}svg{width:100%}</style><svg xmlns=http://www.w3.org/2000/svg viewBox=0,0,${1e3+i},${1e3+i}>${this.innerHTML}</svg>`;this.$=[...t.querySelectorAll`slice`].map(((t,u)=>{let n,o=document.createElementNS(`http://www.w3.org/2000/svg`,`g`),h=document.createElementNS(`http://www.w3.org/2000/svg`,`text`),a=t.getAttribute`size`,p=~~a.replace(`%`,``),g=~~t.getAttribute`stroke-width`||~~this.getAttribute`stroke-width`||500+i/2-i,b=r;o.path=(s=0,r=g,u=t.getAttribute(`stroke`)||0==s&&e.shift(),n=p,h=b,a=(500+i/2)/2-i/2+s-(`stroke-width`==this.getAttribute`fill`?(500-i/2-r)/2:0),A=document.createElementNS(`http://www.w3.org/2000/svg`,`path`))=>(A.setAttribute(`stroke`,u),A.setAttribute(`stroke-width`,r),A.setAttribute(`pathLength`,l),A.setAttribute(`stroke-dasharray`,n+` `+(l-n)),A.setAttribute(`stroke-dashoffset`,h+n),A.setAttribute(`d`,`m${500+i/2} ${500+i/2}m0 ${-a}a2 2 0 000 ${2*a}a2 2 0 000-${2*a}`),A.setAttribute(`fill`,`none`),A.width=r,A.point=(t=0,e)=>e?o.path(e).point(t):A.getPointAtLength(A.getTotalLength()-A.getTotalLength()/l*(t+(b+n/2))),A);p==a?l||[...this.querySelectorAll`slice`].map((t=>l+=~~t.getAttribute`size`+s)):l=~~this.getAttribute`size`||100;p||(p=l-r,a=p+`%`);n=o.path(0);o.onmouseout=t=>(this.g=o,this.dispatchEvent(new Event(`slice`),o.pull(0)));o.onmouseover=t=>(this.g=o,this.dispatchEvent(new Event(`slice`),o.pull(1)));o.setAttribute(`size`,a);o.setAttribute(`slice`,u+1);o.setAttribute(`label`,h.innerHTML=this.querySelector`style`?t.innerHTML&&t.innerHTML.replace(`size`,a)||a:``);n.setAttribute(`stroke-dashoffset`,r+=p+s);[...t.attributes].map((t=>n.setAttribute(t.name,t.value)));h.setAttribute(`y`,n.point(0,~~t.getAttribute`pulltext`||~~this.getAttribute`pulltext`||0).y);h.setAttribute(`x`,n.point(0,~~t.getAttribute`pulltext`||~~this.getAttribute`pulltext`||0).x);o.append(n,h);t.parentNode.replaceChild(o,t);o.pull=(e=t.hasAttribute`pull`,s=Math.abs(~~t.getAttribute`pull`||i))=>o.setAttribute(`transform`,(o.pulled=e)?`translate(${n.point(0,s).x-n.point().x} ${n.point(0,s).y-n.point().y})`:``);o.pull();return o}))}))}}